import React, { useState, useEffect } from "react";
import styled from "styled-components";
import SelectProductItem from "./SelectProductItem";
import { Hr } from "../../common/js/style";
import { Box, Stack, Typography } from "@mui/material";
// import { RiArrowRightSLine } from "react-icons/ri";
import { TabContext } from "@mui/lab";
import TabPanel from "@mui/lab/TabPanel";
import TabList from "@mui/lab/TabList";
import Tab from "@mui/material/Tab";
import Button from "@mui/material/Button";
import OrderButton from "./OrderButton";
import {
  productDetailAtom,
  sizeAtom,
  sizeStateAtom,
  tokenAtom,
  userAtom,
  orderToggleAtom,
  wishPriceAtom,
  userPointAtom,
  userAddressAtom,
} from "../../atoms/atom";
import { useRecoilState, useRecoilValue } from "recoil";
import DeliveryIconBox from "./DeliveryIconBox";
import CheckArea from "./CheckArea";
import { axiosGetFunction } from "../../module/CustomAxios";
import DeliveryRequireModal from "../modal/DeliveryRequireModal";
import AddressChangeModal from "../modal/AddressChangeModal";
import AddAddressModal from "../modal/AddAddressModal";

const panelStyle = {
  padding: "0",
};

const tabListStyle = {
  backgroundColor: "#f4f4f4",
  borderRadius: "80px",
  "& button": {
    borderRadius: 50,
    color: "#222",
    fontSize: "14px",
  },

  "& button.Mui-selected": {
    backgroundColor: "#ef6253",
    color: "#fff",
    fontWeight: 700,
    height: "20px",
  },
};

const tabStyle = {
  color: "#fff",
  // padding: "7px 0 9px",
  // height:"36px"
};

// const tableCellHead = {
//   color: "rgba(34,34,34,.5)",
//   padding: "0 0 9px",
//   fontSize: "12px",
// };

// const tableCell = {
//   border: "none",
//   padding: "9px 0 0",
// };

const OrderContainer = styled.div`
  background-color: #fff;
  /* border: 1px solid pink; */
  .wrapper {
    padding: 32px 32px 0;
    /* background-color: yellow; */
  }
  .section {
    .section_title {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-bottom: 12px;
      margin-top: 15px;
      h3 {
        font-size: 18px;
        font-weight: 700;
        color: #222;
      }
    }
    .final_info_box {
      table {
        margin: 0;
        tr {
          line-height: 24px;
          th {
            padding: 0;
            padding-right: 24px;
            text-align: left;
            font-size: 13px;
            color: rgba(34, 34, 34, 0.5);
            font-weight: normal;
          }
          td {
            padding: 0;
            font-size: 14px;
          }
        }
      }
    }
    .delivery_info {
      display: flex;
      justify-content: space-between;
      align-items: center;
      table {
        tr {
          line-height: 24px;
          th {
            padding: 0;
            padding-right: 24px;
            text-align: left;
            font-size: 13px;
            color: rgba(34, 34, 34, 0.5);
            font-weight: normal;
          }
          td {
            padding: 0;
            font-size: 14px;
          }
        }
      }
      a {
        padding: 0 14px;
        border: 1px solid #d3d3d3;
        color: rgba(34, 34, 34, 0.8);
        font-size: 12px;
        border-radius: 10px;
        height: 34px;
        line-height: 34px;
        text-decoration: none;
      }
    }
  }
`;

const BoxStyle = {
  textAlign: "center",
  padding: "28px 22px",
  flexGrow: 1,
  // backgroundColor: "green",
  // border: "1px solid red",
  // mx: "32px",
};

const subText = {
  fontSize: "12px",
  color: "rgba(34,34,34,.5)",
};

const PriceInputBox = styled.dl`
  display: flex;
  justify-content: space-between;
  padding-bottom: 10px;
  border-bottom: 2px solid #ebebeb;
  /* dt {
    color: "#222";
    font-weight: 700;
    font-size: "14px";
  } */
  span {
    margin-top: 15px;
    font-size: 20px;
    font-weight: 700;
    color: #f15746;
    input {
      max-width: 200px;
      font-size: 24px;
      line-height: 26px;
      cursor: text;
      color: #222;
      border: 0;
      direction: rtl;
      outline: none;
      font-weight: 700;
      ::placeholder {
        font-weight: 700;
        opacity: 0.5;
        font-size: 20px;
      }
    }
  }
`;

const FinalInfoTable = styled.table`
  display: block;
  font-size: 13px;

  tr {
    /* display: block; */
    color: #222;
    th {
      text-align: left;
      font-weight: normal;
      color: rgba(34, 34, 34, 0.5);
    }
    td {
      width: 540px;
      text-align: right;
    }
  }
`;
const subTitle = {
  color: "#222",
  fontWeight: 700,
  fontSize: "14px",
  pb: "16px",
};

const dateButton = {
  border: "1px solid #d3d3d3",
  color: "inherit",
  width: "124px",
  borderRadius: "12px",
  height: "42px",
  "&:hover": {
    border: "1px solid #d3d3d3",
    // color: "gray",
    backgroundColor: "#ebebeb",
  },
  "&:focus": {
    border: "1px solid #222",
    // color: "gray",
    // backgroundColor: "#ebebeb",
  },
};
const PaymentContainerBid = styled.div`
  div {
    .front {
      font-size: 15px;
    }
    .back {
      font-size: 12px;
      color: rgba(34, 34, 34, 0.5);
      padding-left: 8px;
    }
  }
  p {
    font-size: 13px;
  }
`;

const PaymentContainerBuy = styled.div`
  div {
    margin-top: 12px;
    .front {
      font-size: 15px;
    }
    .back {
      font-size: 12px;
      color: rgba(34, 34, 34, 0.5);
      padding-left: 8px;
    }
  }
  p {
    font-size: 15px;
  }
  .normalPay {
    font-weight: 700;
  }
`;

const CheckContainer = styled.div`
  .notice {
    margin: 0;
    font-size: 32px;
    font-weight: 700;
    line-height: 38px;
    padding-bottom: 40px;
    .strong {
      color: #f15746;
    }
  }
  hr {
    margin: 20px 0 0;
    border: 1px solid #222;
  }
`;

const OrderPayment = () => {
  const [value, setValue] = useState("1");
  const [orderPageState, setOrderPageState] = useRecoilState(orderToggleAtom);
  const [waitDate, setWaitDate] = useState(30);
  const [finalPage, setFinalPage] = useState(false);
  const user = useRecoilValue(userAtom);
  const [token, setToken] = useRecoilState(tokenAtom);
  // const [listValue, setListValue] = useState("1");
  const size = useRecoilValue(sizeAtom);
  const sizeState = useRecoilValue(sizeStateAtom);
  const productDetail = useRecoilValue(productDetailAtom);
  const [userAddress, setUserAddress] = useRecoilState(userAddressAtom);
  const [userPoint, setUserPoint] = useRecoilState(userPointAtom);
  const [wishPrice, setWishPrice] = useRecoilState(wishPriceAtom);
  // console.log("1-1-1-1-1-1-1", wishPrice, userPoint);
  console.log("üßßüéëüéëüéêüéêüéêüéèüéè", userAddress);
  // console.log(
  //   "Ïò§ÎçîÌéòÏù¥Î®ºÌä∏!!!!!!!!!!",
  //   productDetail,
  //   "ÏÇ¨Ïù¥Ï¶à--->",
  //   sizeState,
  //   size,
  //   "waitDate",
  //   waitDate
  // );

  useEffect(() => {
    axiosGetFunction(
      `/api/kream/my/address/` + 1,
      { user_no: user },
      token,
      setToken
    ).then(res => {
      setUserAddress(res.data.data.address);
    });
    axiosGetFunction(
      `/api/kream/my/point/` + 1,
      { user_no: user },
      token,
      setToken
    ).then(res => {
      setUserPoint(res.data.data.point);
    });
  }, []);

  const handleChange = (event, newValue) => {
    console.log(1, event, newValue);
    setOrderPageState(newValue);
  };
  const handleChangeButton = e => {
    console.log(e);
  };

  function getToday(waitDate) {
    var date = new Date();
    var year = date.getFullYear();
    var month = ("0" + (1 + date.getMonth())).slice(-2);
    var day = ("0" + (waitDate + date.getDate())).slice(-2);
    if (day > 30) {
      console.log(month, day, waitDate, day - waitDate, Number(month));
      return year + "/" + (Number(month) + 1) + "/" + (day - waitDate);
    } else {
      return year + "/" + month + "/" + day;
    }
  }

  const resultPurchase = () => {
    let filtered = [];
    let result = "-";
    if (size !== null) {
      filtered = size.filter(item => {
        return sizeState === item.size;
      });
      if (filtered.length > 0) {
        result = filtered[0].price !== null ? filtered[0].price : "-";
      }
    }
    return result;
  };
  // const handleChangeListValue = (event, newValue) => {
  //   console.log(2, event, newValue);
  //   setListValue(newValue);
  // };

  // const handleSize = e => {
  //   console.log(e.target.value);
  //   // setSize(e.target.value);
  // ;

  return (
    <OrderContainer>
      <div className="wrapper">
        <SelectProductItem />
        <Box
          sx={{
            height: "1px",
            width: "100%",
            backgroundColor: "#ebebeb",
            mt: "32px",
          }}></Box>
      </div>
      {!finalPage ? (
        <Box sx={{ padding: "0 32px 32px" }}>
          <Stack flexDirection="row">
            <Box sx={BoxStyle}>
              <Typography sx={subText}>Ï¶âÏãú Íµ¨Îß§Í∞Ä</Typography>
              <Typography>{resultPurchase()}Ïõê</Typography>
            </Box>
            <Box sx={BoxStyle}>
              <Typography sx={subText}>Ï¶âÏãú ÌåêÎß§Í∞Ä</Typography>
              <Typography>
                {productDetail.direct_sell_price
                  ? productDetail.direct_sell_price.toLocaleString()
                  : "-"}
              </Typography>
            </Box>
          </Stack>
          <TabContext value={orderPageState}>
            {/* <Box sx={{ borderBottom: 1, borderColor: "divider" }}> */}
            <TabList
              sx={tabListStyle}
              variant="fullWidth"
              TabIndicatorProps={{ hidden: true }}
              onChange={handleChange}
              aria-label="lab API tabs example">
              <Tab sx={tabStyle} label="Íµ¨Îß§ ÏûÖÏ∞∞" value="1" />
              <Tab sx={tabStyle} label="Ï¶âÏãú Íµ¨Îß§" value="2" />
            </TabList>
            {/* </Box> */}
            <Box>
              <TabPanel sx={panelStyle} value="1">
                <Box>
                  <Box>
                    <PriceInputBox>
                      <Typography sx={subTitle}>Íµ¨Îß§ Ìù¨ÎßùÍ∞Ä</Typography>
                      <span>
                        <input
                          onChange={event => {
                            setWishPrice(event.target.value);
                          }}
                          placeholder="Ìù¨ÎßùÍ∞Ä ÏûÖÎ†•"
                          required
                          autoComplete="off"
                          value={wishPrice}
                          pattern="^\d{0,8}(\.\d{1,4})?$"
                        />
                        Ïõê
                      </span>
                    </PriceInputBox>
                    <Typography
                      sx={{
                        fontSize: "14px",
                        color: "rgba(34,34,34,.5)",
                        paddingTop: "4px",
                      }}>
                      Ï¥ù Í≤∞Ï†úÍ∏àÏï°ÏùÄ Îã§Ïùå ÌôîÎ©¥ÏóêÏÑú Í≥ÑÏÇ∞Îê©ÎãàÎã§.
                    </Typography>
                  </Box>
                  <Box sx={{ backgroundColor: "#fff" }}>
                    <Stack direction="column" sx={{ py: "32px" }}>
                      <Typography sx={subTitle}>ÏûÖÏ∞∞ ÎßàÍ∞êÍ∏∞Ìïú</Typography>
                      <Typography sx={{ fontSize: "15px" }}>
                        {waitDate}Ïùº {getToday(waitDate)}
                      </Typography>
                      {/* ÌÅ¥Î¶≠ÌïòÎ©¥, */}
                      <Stack
                        onChange={handleChangeButton}
                        sx={{ mt: "7px" }}
                        direction="row"
                        justifyContent="space-between">
                        {/* <ButtonGroup
                      fullWidth
                      size="large"
                      aria-label="outlined primary button group"> */}
                        <Button
                          onClick={() => {
                            setWaitDate(1);
                          }}
                          sx={dateButton}>
                          1Ïùº
                        </Button>
                        <Button
                          onClick={() => {
                            setWaitDate(3);
                          }}
                          sx={dateButton}>
                          3Ïùº
                        </Button>
                        <Button
                          onClick={() => {
                            setWaitDate(7);
                          }}
                          sx={dateButton}>
                          7Ïùº
                        </Button>
                        <Button
                          onClick={() => {
                            setWaitDate(30);
                          }}
                          sx={dateButton}>
                          30Ïùº
                        </Button>
                        <Button
                          onClick={() => {
                            setWaitDate(60);
                          }}
                          sx={dateButton}>
                          60Ïùº
                        </Button>
                        {/* </ButtonGroup> */}
                      </Stack>
                    </Stack>
                  </Box>
                  <Stack direction="row" justifyContent="space-between">
                    <Typography sx={subTitle}>Ï¥ù Í≤∞Ï†úÍ∏àÏï°</Typography>
                    <Typography
                      sx={{ fontSize: "16px", color: "rgba(34,34,34,.5)" }}>
                      Îã§Ïùå ÌôîÎ©¥ÏóêÏÑú ÌôïÏù∏
                    </Typography>
                  </Stack>
                  <OrderButton
                    onClick={() => {
                      setFinalPage(!finalPage);
                    }}
                    type="buy_step3"
                  />
                </Box>
              </TabPanel>
              <TabPanel value="2" sx={panelStyle}>
                <Box>
                  <Box>
                    <PriceInputBox>
                      <Typography sx={subTitle}>Ï¶âÏãú Íµ¨Îß§Í∞Ä</Typography>
                      <span>121,111 Ïõê</span>
                    </PriceInputBox>
                    <Typography
                      sx={{
                        fontSize: "14px",
                        color: "rgba(34,34,34,.5)",
                        paddingTop: "4px",
                      }}>
                      Ï¥ù Í≤∞Ï†úÍ∏àÏï°ÏùÄ Îã§Ïùå ÌôîÎ©¥ÏóêÏÑú Í≥ÑÏÇ∞Îê©ÎãàÎã§.
                    </Typography>
                  </Box>
                  <Hr margin="32px 0 16px" />
                  <Stack direction="row" justifyContent="space-between">
                    <Typography sx={subTitle}>Ï¥ù Í≤∞Ï†úÍ∏àÏï°</Typography>
                    <Typography
                      sx={{ fontSize: "16px", color: "rgba(34,34,34,.5)" }}>
                      Îã§Ïùå ÌôîÎ©¥ÏóêÏÑú ÌôïÏù∏
                    </Typography>
                  </Stack>
                  <OrderButton
                    onClick={() => {
                      setFinalPage(!finalPage);
                    }}
                    type="buy_step4"
                  />
                </Box>
              </TabPanel>
            </Box>
          </TabContext>
        </Box>
      ) : (
        <>
          <Box sx={{ padding: "0 32px 32px" }}>
            <div className="section delivery_box">
              <div className="section_title">
                <h3>Î∞∞ÏÜ° Ï£ºÏÜå</h3>
                <AddAddressModal/>
              </div>
              <div className="delivery_info">
                <table>
                  <tr>
                    <th>Î∞õÎäî Î∂Ñ</th>
                    <td>{userAddress[0].name}</td>
                  </tr>
                  <tr>
                    <th>Ïó∞ÎùΩÏ≤ò</th>
                    <td>{userAddress[0].phone_number}</td>
                  </tr>
                  <tr>
                    <th>Î∞∞ÏÜ° Ï£ºÏÜå</th>
                    <td>{userAddress[0].address_detail}</td>
                  </tr>
                </table>
                <AddressChangeModal />
              </div>
              <DeliveryRequireModal />
              <div className="section_title">
                <h3>Î∞∞ÏÜ° Î∞©Î≤ï</h3>
              </div>
              <DeliveryIconBox
                order="false"
                title="ÌÉùÎ∞∞Î∞úÏÜ°"
                side="ÏÑ†Î∂à"
                sub="Ï∞©Î∂à Î∞úÏÜ° Ïãú Ï†ïÏÇ∞Í∏àÏï°ÏóêÏÑú Ï∞®Í∞ê"
              />
            </div>
            {/* <div className="check_box"></div> */}
          </Box>
          <Box sx={{ padding: "32px 32px" }}>
            <div className="section point_box">
              <div className="section_title">
                <h3>Ìè¨Ïù∏Ìä∏</h3>
              </div>
              <Button
                sx={{
                  color: "rgba(34, 34, 34, 0.3)",
                  border: "1px solid #ebebeb",
                  margin: "0",
                  width: "636px",
                  padding: "20px 12px",
                  textAlign: "left",
                  display: "block",
                  marginTop: "12px",
                  borderRadius: "10px",
                }}>
                Í≤∞Ï†ú ÏãúÏ†êÏóê ÏµúÎåÄ ÏÇ¨Ïö©
              </Button>
              <br />
              <Box
                component="span"
                sx={{ fontSize: "14px", color: "rgba(34,34,34,.5)" }}>
                Î≥¥Ïú† Ìè¨Ïù∏Ìä∏
              </Box>
              <Box component="span" sx={{ marginLeft: "8px" }}>
                {userPoint.point}P
              </Box>
            </div>
          </Box>
          <Box sx={{ padding: "32px 32px" }}>
            <div className="section final_info_box">
              <div className="section_title">
                <h3>ÏµúÏ¢Ö Ï£ºÎ¨∏ Ï†ïÎ≥¥</h3>
              </div>
              <PriceInputBox>
                <Typography sx={subTitle}>Ï¥ù Í≤∞Ï†úÍ∏àÏï°</Typography>
                <span>{Number(wishPrice) + 9000 + 3000}Ïõê</span>
              </PriceInputBox>
              <FinalInfoTable>
                <tr>
                  <th>Íµ¨Îß§ Ìù¨ÎßùÍ∞Ä</th>
                  <td>{wishPrice}</td>
                </tr>
                <tr>
                  <th>Ìè¨Ïù∏Ìä∏</th>
                  <td>-</td>
                </tr>
                <tr>
                  <th>Í≤ÄÏàòÎπÑ</th>
                  <td>Î¨¥Î£å</td>
                </tr>
                <tr>
                  <th>ÏàòÏàòÎ£å</th>
                  <td>9,000</td>
                </tr>
                <tr>
                  <th>Î∞∞ÏÜ°ÎπÑ</th>
                  <td>3,000</td>
                </tr>
                <tr className="bid_final_date">
                  <th>ÏûÖÏ∞∞ ÎßàÍ∞ê Í∏∞Ìïú</th>
                  <td>ÏÑúÏö∏ Í∞ïÎÇ®Íµ¨ „Öá„Öá„Öá „Öá„Öá„ÖáÎèô</td>
                </tr>
              </FinalInfoTable>
            </div>
          </Box>
          <Box sx={{ padding: "32px 32px" }}>
            <div className="section payment_box">
              <div className="section_title">
                <h3>Í≤∞Ï†ú Î∞©Î≤ï</h3>
              </div>
              {/* {"Íµ¨Îß§ÏûÖÏ∞∞" && <PaymentContainerBid>
                <div>
                  <span className="front">Ïπ¥Îìú Í∞ÑÌé∏Í≤∞Ï†ú</span>
                  <span className="back">ÏùºÏãúÎ∂à</span>
                </div>
                <Button
                  sx={{
                    color: "rgba(34, 34, 34, 0.3)",
                    border: "1px solid #ebebeb",
                    margin: "0",
                    width: "636px",
                    padding: "20px 12px",
                    textAlign: "left",
                    display: "block",
                    marginTop: "12px",
                    borderRadius: "10px",
                  }}>
                  Ïπ¥ÎìúÎ•º Îì±Î°ùÌï¥Ï£ºÏÑ∏Ïöî
                </Button>
                <p>
                  Íµ¨Îß§ ÏûÖÏ∞∞ÏùÄ ÏùºÏãúÎ∂àÎßå ÏßÄÏõêÌïòÎ©∞, Ïπ¥ÎìúÏÇ¨ ÌôàÌéòÏù¥ÏßÄÎÇò Ïï±ÏóêÏÑú Î∂ÑÌï†
                  ÎÇ©Î∂ÄÎ°ú Î≥ÄÍ≤Ω Í∞ÄÎä•Ìï©ÎãàÎã§. Îã®, Ïπ¥ÎìúÏÇ¨Î≥Ñ Ï†ïÏ±ÖÏóê Îî∞Îùº Î∂ÑÌï† ÎÇ©Î∂Ä
                  Î≥ÄÍ≤Ω Ïãú ÏàòÏàòÎ£åÍ∞Ä Î∞úÏÉùÌï† Ïàò ÏûàÏäµÎãàÎã§.
                </p>
              </PaymentContainerBid>} */}
              {"Ï¶âÏãúÍµ¨Îß§" && (
                <PaymentContainerBuy>
                  <p>Í≥ÑÏ¢å Í∞ÑÌé∏Í≤∞Ï†ú</p>
                  <Button
                    sx={{
                      color: "rgba(34, 34, 34, 0.3)",
                      border: "1px solid #ebebeb",
                      margin: "0",
                      width: "636px",
                      padding: "20px 12px",
                      textAlign: "left",
                      display: "block",
                      marginTop: "12px",
                      borderRadius: "10px",
                    }}>
                    Í≥ÑÏ¢åÎ•º Îì±Î°ùÌï¥Ï£ºÏÑ∏Ïöî
                  </Button>
                  <div>
                    <span className="front">Ïπ¥Îìú Í∞ÑÌé∏Í≤∞Ï†ú</span>
                    <span className="back">ÏùºÏãúÎ∂à</span>
                  </div>
                  <Button
                    sx={{
                      color: "rgba(34, 34, 34, 0.3)",
                      border: "1px solid #ebebeb",
                      margin: "0",
                      width: "636px",
                      padding: "20px 12px",
                      textAlign: "left",
                      display: "block",
                      marginTop: "12px",
                      borderRadius: "10px",
                    }}>
                    Ïπ¥ÎìúÎ•º Îì±Î°ùÌï¥Ï£ºÏÑ∏Ïöî
                  </Button>
                  <div>
                    <span className="front">ÏùºÎ∞ò Í≤∞Ï†ú</span>
                    <span className="back">ÏùºÏãúÎ∂à</span>
                  </div>
                  <Button
                    sx={{
                      color: "#222",
                      border: "1px solid #ebebeb",
                      margin: "0",
                      width: "636px",
                      padding: "20px 12px",
                      textAlign: "left",
                      display: "block",
                      marginTop: "12px",
                      borderRadius: "10px",
                    }}>
                    Ïã†Ïö©Ïπ¥Îìú
                  </Button>
                </PaymentContainerBuy>
              )}
            </div>
          </Box>
          <Box sx={{ padding: "32px 32px" }}>
            <CheckContainer>
              {CHECK_TEXT.map((item, id) => (
                <CheckArea
                  no={id}
                  key={id}
                  title={item.title}
                  content={item.content}
                />
              ))}
              {/* <CheckArea status={false} />
      <CheckArea />
      <CheckArea />
      <CheckArea /> */}
              <CheckArea title="Íµ¨Îß§ Ï°∞Í±¥ÏùÑ Î™®Îëê ÌôïÏù∏ÌïòÏòÄÏúºÎ©∞, Í±∞Îûò ÏßÑÌñâÏóê ÎèôÏùòÌï©ÎãàÎã§" />
              <Stack direction="row" justifyContent="space-between">
                <Typography sx={subTitle}>Ï¥ù Í≤∞Ï†úÍ∏àÏï°</Typography>
                <Typography
                  sx={{ fontSize: "20px", color: "#f15746", fontWeight: 700 }}>
                  {Number(wishPrice) + 9000 + 3000}Ïõê
                </Typography>
              </Stack>
              <OrderButton type="buy_step2" />
            </CheckContainer>
          </Box>
        </>
      )}
    </OrderContainer>
  );
};

export default OrderPayment;

const CHECK_TEXT = [
  {
    title:
      "ÌåêÎß§ÏûêÏùò ÌåêÎß§Í±∞Î∂Ä, Î∞∞ÏÜ°ÏßÄÏó∞, ÎØ∏ÏûÖÍ≥† Îì±Ïùò ÏÇ¨Ïú†Í∞Ä Î∞úÏÉùÌï† Í≤ΩÏö∞, Í±∞ÎûòÍ∞Ä Ï∑®ÏÜåÎê† Ïàò ÏûàÏäµÎãàÎã§.",
    content:
      "Ïï± ÏïåÎ¶º Ìï¥Ï†ú, ÏïåÎ¶ºÌÜ° Ï∞®Îã®, Ï†ÑÌôîÎ≤àÌò∏ Î≥ÄÍ≤Ω ÌõÑ ÎØ∏Îì±Î°ù ÏãúÏóêÎäî Í±∞Îûò ÏßÑÌñâ ÏÉÅÌÉú ÏïåÎ¶ºÏùÑ Î∞õÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.",
  },
  {
    title:
      "Ï∞ΩÍ≥† Î≥¥Í¥ÄÏùÑ ÏÑ†ÌÉùÌïú Í≤ΩÏö∞, Íµ¨Îß§ÏûêÏóêÍ≤å Î∞∞ÏÜ°ÎêòÏßÄ ÏïäÍ≥† KREAM Ï∞ΩÍ≥†Ïóê Î≥¥Í¥ÄÎê©ÎãàÎã§.",
    content:
      "Í≤ÄÏàò Ìï©Í≤© ÌõÑ Î≥¥Í¥ÄÏù¥ ÏôÑÎ£åÎêòÎ©¥ Ï∞ΩÍ≥† Ïù¥Ïö©Î£å(ÌòÑÏû¨ Ï≤´ 30Ïùº Î¨¥Î£å)Í∞Ä Í≤∞Ï†úÎê©ÎãàÎã§.",
  },
  {
    title:
      "‚ÄòÎ∞îÎ°ú Í≤∞Ï†úÌïòÍ∏∞‚Äô Î•º ÏÑ†ÌÉùÌïòÏãúÎ©¥ Ï¶âÏãú Í≤∞Ï†úÍ∞Ä ÏßÑÌñâÎêòÎ©∞, Îã®Ïàú Î≥ÄÏã¨Ïù¥ÎÇò Ïã§ÏàòÏóê ÏùòÌïú Ï∑®ÏÜåÍ∞Ä Î∂àÍ∞ÄÎä•Ìï©ÎãàÎã§.",
    content:
      "Î≥∏ Í±∞ÎûòÎäî Í∞úÏù∏Í∞Ñ Í±∞ÎûòÎ°ú Ï†ÑÏûêÏÉÅÍ±∞ÎûòÎ≤ï(Ï†ú17Ï°∞)Ïóê Îî∞Î•∏ Ï≤≠ÏïΩÏ≤†Ìöå(ÌôòÎ∂à, ÍµêÌôò) Í∑úÏ†ïÏù¥ Ï†ÅÏö©ÎêòÏßÄ ÏïäÏäµÎãàÎã§.",
  },
];
